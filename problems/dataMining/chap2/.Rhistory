name <- c(1,2,3,4,5)
name
r[1]
name[1]
print(arrayTest)
print(1)
print(123)
print(a)
a <- c(1,2,3);
a <- c(1,2,3)
print(a)
print(unlist(b))
print(1)
print(unlist(b))
print(unlist(b))
print(unlist(b))
print(unlist(b))
print(1)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
print(a)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
x <- runif(n, min=0, max=10)
print(x)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
warings()
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
help(women[,1])
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/datasets.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/sandkasse.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
plot(x,y)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/programmering/R/plots.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
setwd("~/Documents/skole/semester6/STK2100/problems/chap2")
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
summary(Auto)
summary(mpg)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
print(typeof(auto$fuel))
head(auto)
head(auto$fuel)
fuel1 = as.factor(auto$fuel, levels=c("gas", "diesel"))
fuel1 = factor(auto$fuel, levels=c("gas", "diesel"))
print(typeof(auto$fuel))
print(typeof(fuel1))
head(auto)
View(auto)
View(Auto)
View(Auto)
rm Auto
rm() Auto
View(auto)
fit = lm(y~ fuel$engine.size + fuel1)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/auto.R', echo=TRUE)
summary(fit)
print(summary(fit)$r_squared)
print(summary(fit$r_squared))
print(summary(fit)$r.squared)
print(fit$r.squared)
print(summary(fit)$r.squared)
fit2 = lm(auto$city.distance ~ (auto$engine.size)^3 + fuel1)
print(summary(fit2)$r.squared)
x = auto$enginze.size
fit2 = lm(auto$city.distance ~ x + I(x^2) + I(x^3) + fuel1)
print(summary(fit2)$r.squared)
fit2 = lm(auto$city.distance ~ x + I(x^2) + I(x^3) + fuel1)
fit2 = lm(auto$city.distance ~ auto$engine.size + I(auto$engine.size^2) + fuel1)
print(summary(fit2)$r.squared)
fit2 = lm(auto$city.distance ~ auto$engine.size + I(auto$engine.size^2) + I(auto$engine.size^3)+ fuel1)
print(summary(fit2)$r.squared)
fit2 = lm(auto$city.distance ~ x + fuel1)
print(x)
x <- auto$enginze.size
print(x)
x <- auto$engine.size
fit2 = lm(auto$city.distance ~ x + fuel1)
print(x)
fit2 = lm(auto$city.distance ~ x^3 + fuel1)
print(summary(fit2)$r.squared)
fit2 = lm(auto$city.distance ~ I(x^3) + fuel1)
print(summary(fit2)$r.squared)
fit2 = lm(auto$city.distance ~ x + I(x^2) + I(x^3) + fuel1)
print(summary(fit2)$r.squared)
fit3 = lm(auto$city.distance ~ x^3)
print(summary(fit3)$r.squared)
fit3 = lm(auto$city.distance ~ x + x^2 x^3)
print(summary(fit3)$r.squared)
fit3 = lm(auto$city.distance ~ x + x^2 x^3 + fuel1)
fit3 = lm(auto$city.distance ~ x + x^2 x^3 + fuel1)
fit3 = lm(auto$city.distance ~ x + x^2 + x^3 + fuel1)
print(summary(fit3)$r.squared)
print(summary(fit2)$r.squared)
fit3 = lm(auto$city.distance ~ x^3 + fuel1)
print(summary(fit3)$r.squared)
fit3 = lm(auto$city.distance ~ poly(x, degree = 3) + fuel1)
print(summary(fit3)$r.squared)
print("hello world")
fit2 = lm(auto$city.distance ~ poly(x, degree = 3) + fuel1)
R2_1 = 1 - (deviance(fit1)^2)
R2_1 = 1 - deviance(fit1)^2
fit1 = lm(y~ auto$engine.size + fuel1)
R2_1 = 1 - deviance(fit1)^2
print(residuals(fit1))
print(sum(residuals(fit1)^2))
print(fitted(fit1))
RSS1 = sum(residuals(fit1)^2)
TSS1 = sum((fitted(fit1)-mean(fit1))^2)
TSS1 = sum((1/fitted(fit1)-mean(auto$city.distance))^2)
R2_1 = 1 - RSS1/TSS1
print(R2_1)
RSS1 = sum(auto$city.distance-1/fitted(fit1))
TSS1 = sum((auto$city.distance-mean(auto$city.distance))^2)
R2_1 = 1 - RSS1/TSS1
print(R2_1)
RSS1 = sum((auto$city.distance-1/fitted(fit1))^2)
TSS1 = sum((auto$city.distance-mean(auto$city.distance))^2)
R2_1 = 1 - RSS1/TSS1
print(R2_1)
print(R2_1, R2_2)
print(c(R2_1, R2_2))
R2_2 = summary(fit2)$r.squared
print(c(R2_1, R2_2))
head(auto)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
cov(auto)
pairs(auto)
libary(ggplot2)
qplot(engine.size, highway.distance, data=auto)
ggplot(engine.size, highway.distance, data=auto)
qplot(engine.size, highway.distance, data=auto)
libary(ggplot2)
library(ggplot2)
qplot(engine.size, highway.distance, data=auto)
qplot(city.distance, highway.distance, data=auto)
qplot(engine.size, highway.distance, data=auto)
qplot(1/engine.size, highway.distance, data=auto)
qplot(engine.size, highway.distance, data=auto)
qplot(engine.size, highway.distance, data=auto, method="lm")
ggplot(auto) +
geom_point(engine.size, highway.distance)
ggplot(auto) +
geom_point(engine.size, highway.distance)
ggplot(auto) +
geom_point(engine.size, highway.distance)
ggplot(auto)
geom_point(engine.size, highway.distance)
ggplot(data=auto)
geom_point(engine.size, highway.distance)
ggplot(auto, aes(x=engine.size, y=highway.distance))
geom_point()
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point()
geom_smooth(method="lm")
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point() +
geom_smooth(method="lm")
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point() +
geom_smooth(method="lm")
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point() +
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point()
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point()
fitPoly = lm(highway.distance~enginze.size, data=auto)
fitPoly = lm(highway.distance~engine, data=auto)
fitPoly = lm(highway.distance~engine.size, data=auto)
summary(fitPoly)
fitPoly = lm(highway.distance~engine.size + I(engine.size^2), data=auto)
summary(fitPoly)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
print(betas[1])
print(betas[1]*2)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
x = seq(min(auto$engine.size), max(auto$engine.size), 100)
fitDf = data.frame(x, beta[1] + beta[2]*x + beta[3]*x^2)
fitDf = data.frame(x, betas[1] + betas[2]*x + betas[3]*x^2)
print(fitDf)
y = betas[1] + betas[2]*x + betas[3]*x^2
fitDf = data.frame(x, y)
print(fitDf)
print(x)
x = seq(min(auto$engine.size), max(auto$engine.size), length.out100)
x = seq(min(auto$engine.size), max(auto$engine.size), length.out=100)
y = betas[1] + betas[2]*x + betas[3]*x^2
fitDf = data.frame(x, y)
print(x)
print(fitDf)
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(fitDf, x = x, y = y)
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(fitDf, x = x, y = y)
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(df=fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(df=fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(df=fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point(data=fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_line(data=fitDf, aes(x = x, y = y))
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point() +
geom_line(data=fitDf, aes(x = x, y = y))
x = seq(min(auto$engine.size), max(auto$engine.size), length.out=100)
y = predict(fit1, data=x)
fitDf = data.frame(x, y)
print(y)
y = predict(fit1, newdata=x)
print(y)
fitDf = data.frame(x, y)
y = predict(fit1, subset=x)
fitDf = data.frame(x, y)
y = predict(fit1, newdata=x)
fitDf = data.frame(x, y)
y = predict(fitPoly, newdata=x)
fitDf = data.frame(x, y)
print(predict(fitPoly, 1))
x = seq(min(auto$engine.size), max(auto$engine.size), length.out=100)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
print(predict(fitPoly, fitDf))
print(lenght(predict(fitPoly, fitDf))
print(lenght(predict(fitPoly, fitDf)))
print(length(predict(fitPoly, fitDf)))
fitDf$highway.distance = predict(fitDf, newdata=fitDf$engine.size)
fitDf$highway.distance <- predict(fitDf, newdata=fitDf$engine.size)
print(fitDf)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
y = predict(fitPoly, newdata=x)
print(y)
fitDf$highway.distance <- y
print(length(y))
y = predict(fitPoly, newdata=fitDf$engine.size)
print(length(y))
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
fitDf$highway.distance = predict(fitPoly, fitDf))
fitDf$highway.distance = predict(fitPoly, fitDf)
print(fitDf)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
ggplot(auto, aes(x=engine.size, y=highway.distance)) +
geom_point() +
geom_line(data=fitDf, aes(x = engine.size, y = highway.distance))
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
source('~/Documents/skole/semester6/STK2100/problems/chap2/ex2_7.R', echo=TRUE)
summary(fitPoly)
print(log(10))
print(log(e))
print(log(math.e))
print(log(exp(1)))
summary(fitPoly)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~, data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~., data=auto)
summary(fit1)
View(auto)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance., data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance, data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance+aspirationturbo, data=auto)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance, data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance+factor(brand), data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance+factor(brand)+factor(fuel), data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance+factor(brand)+fuel1, data=auto)
summary(fit1)
#fitPoly = lm(log(highway.distance)~ log(engine.size) +fuel1 + cylinder2 + log(curb.weight), data=auto)
fit1 = lm(highway.distance~city.distance+factor(brand), data=auto)
summary(fit1)
